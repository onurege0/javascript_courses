// const request = new XMLHttpRequest();

// request.addEventListener("readystatechange", () => {
//   if (request.readyState === 4 && request.status === 200) {
//     console.log(request.responseText);
//   }
//   else if (request.readyState === 4) {
//     console.warn("Hata");
//   }
// });

// request.open("PATCH", "https://jsonplaceholder.typicode.com/posts/3");
// request.send();

// const generateReq = (address, callback) => {
//   const request = new XMLHttpRequest();

//   request.addEventListener("readystatechange", () => {
//     if (request.readyState === 4 && request.status === 200) {
//       const result = JSON.parse(request.responseText);
//       callback(null, result);
//     } else if (request.readyState === 4) {
//       callback("HATA", null);
//     }
//   });

//   request.open("GET", address);
//   request.send();
// };

// generateReq("https://jsonplaceholder.typicode.com/posts/3", (error, result) => {
//   if (error) {
//     console.warn(error);
//   } else {
//     console.log(result);
//   }
// });

// generateReq("https://jsonplaceholder.typicode.com/photos", (error, result) => {
//   if (error) {
//     console.log(error);
//   } else {
//     console.log(result);
//   }
// });

// const request = new XMLHttpRequest();

// request.addEventListener("readystatechange", () => {
//     if (request.readyState === 4 && request.status === 200) {
//         console.log(request.responseText);
//     }
//     else if (request.readyState === 4) {
//         console.warn("HATA");
//     }
// })

// request.open("GET", "https://jsonplaceholder.typicode.com/photos/1");
// request.send();

// const generateReq = (address) => {
//   let result = null;
//   const request = new XMLHttpRequest();
//   request.addEventListener("readystatechange", () => {
//     if (request.readyState === 4 && request.status === 200) {
//       const objectresult = JSON.parse(request.responseText);
//       result = objectresult;
//       // callback(objectresult)
//     } else if (request.readyState === 4) {
//       // callback("HATA")
//       result = "HATA";
//     }
//   });

//   request.open("GET", address, false);
//   request.send();
//   return result;
// };

// console.log(generateReq("https://jsonplaceholder.typicode.com/photos/1"));

// const generateReqWithPromise = (address) => {
//   return new Promise((resolved, rejected) => {
//     const request = new XMLHttpRequest();
//     request.addEventListener("readystatechange", () => {
//       if (request.readyState === 4 && request.status === 200) {
//         const objectresult = JSON.parse(request.responseText);
//         resolved(objectresult);
//       } else if (request.readyState === 4) {
//         rejected("HATA");
//       }
//     });
//     request.open("GET", address);
//     request.send();
//   });
// };

// generateReqWithPromise("https://jsonplaceholder.typicode.com/photos/1")
//   .then((result) => {
//     console.log(result);
//     return generateReqWithPromise(
//       "https://jsonplaceholder.typicode.com/photos/2"
//     );
//   })
//   .then((result) => {
//     console.log(result);
//     return generateReqWithPromise(
//       "https://jsonplaceholder.typicode.com/photos/3"
//     );
//   })
//   .then((result) => {
//     console.log(result);
//     return generateReqWithPromise(
//       "https://jsonplaceholder.typicode.com/photos/4"
//     );
//   })
//   .catch((error) => console.log(error));

//fetch GET
fetch("https://jsonplaceholder.typicode.com/photos/1")
  .then((response) => {
    if (response.ok && response.status === 200) {
      return response.json();
    }
  })
  .then((response) => console.log(response));

//fetch POST
const data = {
  userID: 1,
  title: "fetch",
  completed: true,
};
fetch("https://jsonplaceholder.typicode.com/todos", {
  method: "POST",
  body: JSON.stringify(data),
  headers: {
    "Content-type": "application/json; charset=UTF-8",
  },
})
  .then((response) => response.json())
  .then((response) => console.log(response));

//fetch PUT
fetch("https://jsonplaceholder.typicode.com/todos/1", {
  method: "PUT",
  body: JSON.stringify({
    userID: 1,
    title: "fetch",
    completed: false,
    id: 1,
  }),
  headers: {
    "Content-type": "application/json; charset=UTF-8",
  },
})
  .then((response) => response.json())
  .then((response) => console.log(response));

//fetch DELETE
fetch("https://jsonplaceholder.typicode.com/todos/1", {
  method: "DELETE",
}).then((respone) => console.log(respone));
